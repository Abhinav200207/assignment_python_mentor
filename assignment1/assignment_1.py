# -*- coding: utf-8 -*-
"""Assignment 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-Sx2sPXXRvQ1kPeiwm1lCektXEfoLjF9
"""

# 1
print("="*60)
for i in range(1,6):
  for j in range(i):
    print(i,end="")
  print()

cnt = 1
for i in range(1,5):
  for j in range(i):
    print(cnt,end="")
    cnt+=1
  print()

n = 5
for i in range(1, n+1):
    print(" " * (n - i), end="")
    for j in range(1, i+1):
        print(j, end=" ")
    print()

for i in range(n-1, 0, -1):
    print(" " * (n - i), end="")
    for j in range(1, i+1):
        print(j, end=" ")
    print()

n = 5
for i in range(n, 0, -1):
    print(" " * (n - i), end="")
    for j in range(1, i+1):
        print(j, end=" ")
    print()

for i in range(2, n + 1):
    print(" " * (n - i), end="")
    for j in range(i, 0, -1):
        print(j, end=" ")
    print()

# 2
print("="*60)
def is_prime(num):
    if num < 2:
        return False
    for i in range(2, int(num**0.5) + 1):
        if num % i == 0:
            return False
    return True

primes = [num for num in range(50, 151) if is_prime(num)]
print(*primes)
print(len(primes))

# 3
print("="*60)
def fibonacci(n):
    fib_series = [0, 1]
    while len(fib_series) < n:
        fib_series.append(fib_series[-1] + fib_series[-2])
    return fib_series

n = 10
print(*fibonacci(n))

# 4
print("="*60)
import math

def is_special_number(num):
    return num == sum(math.factorial(int(digit)) for digit in str(num))

special_numbers = []
for num in range(1, 100000):
    if is_special_number(num):
        special_numbers.append(num)

print(*special_numbers)

# 5
print("="*60)
mangoes = 0
while True:
    mangoes += 1
    total = mangoes
    valid = True
    for _ in range(3):
        if (total - 1) % 3 == 0:
            total = (total - 1) // 3 * 2
        else:
            valid = False
            break
    if valid:
        print(mangoes)
        break

# 6
def is_armstrong(num):
    num_str = str(num)
    power = len(num_str)
    return num == sum(int(digit) ** power for digit in num_str)

armstrong_numbers = [num for num in range(1, 10000) if is_armstrong(num)]
print(*armstrong_numbers)