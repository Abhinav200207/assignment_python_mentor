# -*- coding: utf-8 -*-
"""Assignment 3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14O_ULO69WtNodVOVMe5STiVUgavnj2zx
"""

# 1
def common_characters(str1, str2):
    common = []
    for c in str1:
        if c in str2 and c not in common:
            common.append(c)
    return "".join(common)

s1 = "abcdef"
s2 = "rebsdef"
print(common_characters(s1, s2))

# 2
print("="*60)
def count_vowels(s):
    v = set("aeiouAEIOU")
    count = 0
    for char in s:
        if char in v:
            count += 1
    return count

s = "My Name is abhinav"
print(count_vowels(s))

# 3
print("="*60)
def is_palindrome(s):
    return s == s[::-1]

s1 = "abcdef"
s2 = "abcdefedcba"

print(is_palindrome(s1))
print(is_palindrome(s2))

# 4
print("="*60)
def are_anagrams(str1, str2):
    if len(str1) != len(str2):
        return False
    s1 = sorted(str1)
    s2 = sorted(str2)
    return s1 == s2

s1 = "listen"
s2 = "silent"
print(are_anagrams(s1, s2))

# 5
print("="*60)
def key_exists(d, key):
    for k in d:
        if k == key:
            return True
    return False

d = {"a": 1, "b": 2, "c": 3}
k = "b"
print(key_exists(d, k))

# 6
print("="*60)
def sum_of_items(d):
    tot = 0
    for k in d:
        tot += d[k]
    return tot

d = {"a": 1, "b": 2, "c": 3}
print(sum_of_items(d))

# 7
print("="*60)
def map_lists_to_dict(k, val):
    d = {}
    for i in range(len(k)):
        d[k[i]] = val[i]
    return d

k = ["a", "b", "c"]
val = [1, 2, 3]
print(map_lists_to_dict(k, val))

# 8
print("="*60)
def word_frequency(s):
    words = s.split()
    freq = {}
    for w in words:
        if w in freq:
            freq[w] += 1
        else:
            freq[w] = 1
    return freq

s = "1 3 2 4 6 7 3 5 6 1 3 4 7 8 5 3 2 4 6 7"
print(word_frequency(s))

# 9
print("="*60)
def create_tuples(n):
    res = []
    for i in range(1, n+1):
        res.append((i, i * i))
    return res

n = 5
print(create_tuples(n))

# 10
print("="*60)
def distinct_elements(lst):
    d = []
    for elem in lst:
        if elem not in d:
            d.append(elem)
    return d

lst = [1, 2, 2, 3, 4, 4, 5]
print(distinct_elements(lst))

